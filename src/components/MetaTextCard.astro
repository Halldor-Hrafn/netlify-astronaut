---
import { Octokit, App } from "octokit";
import { readFile } from "fs/promises";

const octokit = new Octokit({ auth: import.meta.env.GITHUB_TOKEN });

// I really don't like the fact that I use the `any` type here, but the documentation is shit
const data: any = await octokit.request("GET /repos/{owner}/{repo}/commits", {
	owner: "Halldor-Hrafn",
	repo: "netlify-astronaut",
});

const commitsCount = data.data.length;

const versionData = await readFile("./package.json", "utf-8");
const version = JSON.parse(versionData).version;

// const commitSha = data.data[0].sha;

// console.log(commitSha);

// const commit: any = await octokit.request("GET /repos/{owner}/{repo}/commits/{commit_sha}", {
// 	owner: "Halldor-Hrafn",
// 	repo: "netlify-astronaut",
// 	commit_sha: commitSha,
// });

// console.log(commit);
---

<li class="text-card">
  <div>
    <h2>Meta Stuff</h2>
    <p>Version: {version}</p>
    <p>Last Updated: Whenever I have the motivation</p>
    <p>Github Repo: <span class="text-gradient"><a href="https://github.com/Halldor-Hrafn/netlify-astronaut">here</a></span></p>
    <p>Commits made: {commitsCount}</p>
    <p>TOS: <span class="text-gradient"><a href="/tos">here</a></span></p>
  </div>
</li>
<style>
  .text-card {
		list-style: none;
		display: flex;
		padding: 1px;
		background-color: #23262d;
		background-image: none;
		background-size: 400%;
		border-radius: 7px;
		background-position: 100%;
		transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
	}
  .text-card > div {
		width: 100%;
		text-decoration: none;
		line-height: 1.4;
		padding: calc(1.5rem - 1px);
		border-radius: 8px;
		color: white;
		background-color: #23262d;
		opacity: 0.8;
	}

  h2 {
		margin: 0;
		font-size: 1.25rem;
		transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
	}
	p {
		margin-top: 0.5rem;
		margin-bottom: 0;
	}
	.text-card:is(:hover, :focus-within) {
		background-position: 0;
		background-image: var(--accent-gradient);
	}
	.text-card:is(:hover, :focus-within) h2 {
		color: rgb(var(--accent-light));
	}
  .text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
</style>

